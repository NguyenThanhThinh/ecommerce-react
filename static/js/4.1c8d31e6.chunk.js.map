{"version":3,"sources":["app/modules/ECommerce/pages/customers/customers-loading-dialog/CustomersLoadingDialog.js","app/modules/ECommerce/_redux/customers/customersCrud.js","app/modules/ECommerce/_redux/customers/customersActions.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialogHeader.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditForm.js","app/modules/ECommerce/pages/customers/CustomersUIHelpers.js","app/modules/ECommerce/pages/customers/CustomersUIContext.js","app/modules/ECommerce/pages/customers/customer-edit-dialog/CustomerEditDialog.js","app/modules/ECommerce/pages/customers/customer-delete-dialog/CustomerDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-delete-dialog/CustomersDeleteDialog.js","app/modules/ECommerce/pages/customers/customers-fetch-dialog/CustomersFetchDialog.js","app/modules/ECommerce/pages/customers/customers-update-status-dialog/CustomersUpdateStateDialog.js","app/modules/ECommerce/pages/customers/customers-filter/CustomersFilter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/TypeColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/customers/customers-table/CustomersTable.js","app/modules/ECommerce/pages/customers/customers-grouping/CustomersGrouping.js","app/modules/ECommerce/pages/customers/CustomersCard.js","app/modules/ECommerce/pages/customers/CustomersPage.js","app/modules/ECommerce/pages/products/products-loading-dialog/ProductsLoadingDialog.js","app/modules/ECommerce/_redux/products/productsCrud.js","app/modules/ECommerce/_redux/products/productsActions.js","app/modules/ECommerce/pages/products/ProductsUIHelpers.js","app/modules/ECommerce/pages/products/ProductsUIContext.js","app/modules/ECommerce/pages/products/product-delete-dialog/ProductDeleteDialog.js","app/modules/ECommerce/pages/products/products-delete-dialog/ProductsDeleteDialog.js","app/modules/ECommerce/pages/products/products-fetch-dialog/ProductsFetchDialog.js","app/modules/ECommerce/pages/products/products-update-status-dialog/ProductsUpdateStatusDialog.js","app/modules/ECommerce/pages/products/products-filter/ProductsFilter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/StatusColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ConditionColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ColorColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/PriceColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/products-table/ProductsTable.js","app/modules/ECommerce/pages/products/products-grouping/ProductsGrouping.js","app/modules/ECommerce/pages/products/ProductsCard.js","app/modules/ECommerce/pages/products/ProductsPage.js","app/modules/ECommerce/pages/products/product-edit/ProductEditForm.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIHelper.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsUIContext.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFilter.js","app/modules/ECommerce/_redux/specifications/specificationsCrud.js","app/modules/ECommerce/_redux/specifications/specificationsSlice.js","app/modules/ECommerce/_redux/specifications/specificationsActions.js","app/modules/ECommerce/pages/products/product-specifications/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsTable.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsLoadingDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationDeleteDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsFetchDialog.js","app/modules/ECommerce/pages/products/product-specifications/SpecificationsGrouping.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialogHeader.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditForm.js","app/modules/ECommerce/pages/products/product-specifications/specification-edit-dialog/SpecificationEditDialog.js","app/modules/ECommerce/pages/products/product-specifications/Specifications.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIHelper.js","app/modules/ECommerce/pages/products/product-remarks/RemarksUIContext.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFilter.js","app/modules/ECommerce/_redux/remarks/remarksCrud.js","app/modules/ECommerce/_redux/remarks/remarksSlice.js","app/modules/ECommerce/_redux/remarks/remarksActions.js","app/modules/ECommerce/pages/products/product-remarks/column-formatters/ActionsColumnFormatter.js","app/modules/ECommerce/pages/products/product-remarks/RemarksTable.js","app/modules/ECommerce/pages/products/product-remarks/RemarksLoadingDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarkDeleteDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksFetchDialog.js","app/modules/ECommerce/pages/products/product-remarks/RemarksGrouping.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialogHeader.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditForm.js","app/modules/ECommerce/pages/products/product-remarks/remark-edit-dialog/RemarkEditDialog.js","app/modules/ECommerce/pages/products/product-remarks/Remarks.js","app/modules/ECommerce/pages/products/product-edit/ProductEdit.js","app/modules/ECommerce/pages/eCommercePage.js"],"names":["CustomersLoadingDialog","isLoading","useSelector","state","customers","listLoading","shallowEqual","useEffect","text","CUSTOMERS_URL","actions","customersSlice","fetchCustomers","queryParams","dispatch","startCall","callType","callTypes","list","axios","post","requestFromServer","then","response","data","totalCount","entities","customersFetched","catch","error","clientMessage","catchError","fetchCustomer","id","action","customerId","get","customer","customerFetched","customerForEdit","undefined","deleteCustomer","delete","customerDeleted","createCustomer","customerForCreation","customerCreated","updateCustomer","put","customerUpdated","updateCustomersStatus","ids","status","customersStatusUpdated","deleteCustomers","customersDeleted","CustomerEditDialogHeader","actionsLoading","useState","title","setTitle","_title","firstName","lastName","Modal","Header","closeButton","Title","CustomerEditSchema","Yup","shape","min","max","required","email","userName","dateOfBbirth","nullable","ipAddress","CustomerEditForm","saveCustomer","onHide","enableReinitialize","initialValues","validationSchema","onSubmit","values","handleSubmit","Body","className","name","component","Input","placeholder","label","type","customFeedbackLabel","value","Footer","onClick","CustomerStatusCssClasses","CustomerStatusTitles","CustomerTypeCssClasses","CustomerTypeTitles","defaultSorted","dataField","order","sizePerPageList","initialFilter","filter","sortOrder","sortField","pageNumber","pageSize","CustomersUIContext","createContext","useCustomersUIContext","useContext","Consumer","CustomersUIProvider","customersUIEvents","children","setQueryParamsBase","setIds","setQueryParams","useCallback","nextQueryParams","prevQueryParams","isFunction","isEqual","initCustomer","gender","newCustomerButtonClick","openEditCustomerDialog","openDeleteCustomerDialog","openDeleteCustomersDialog","openFetchCustomersDialog","openUpdateCustomersStatusDialog","Provider","CustomerEditDialog","show","customersUIContext","customersUIProps","useMemo","useDispatch","size","aria-labelledby","CustomerDeleteDialog","CustomersDeleteDialog","length","selectedCustomers","_customers","forEach","find","el","push","CustomersFetchDialog","map","CustomersUpdateStateDialog","setStatus","onChange","e","target","CustomersFilter","applyFilter","newQueryParams","searchText","prepareFilter","handleBlur","setFieldValue","handleChange","onBlur","StatusColumnFormatter","cellContent","row","TypeColumnFormatter","ActionsColumnFormatter","rowIndex","src","toAbsoluteUrl","CustomersTable","currentState","columns","sort","sortCaret","headerSortingClasses","formatter","columnFormatters","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","uiHelpers","sizePerPage","page","pagination","paginationFactory","paginationProps","paginationTableProps","wrapperClasses","bordered","bootstrap4","remote","keyField","onTableChange","getHandlerTableChange","selectRow","getSelectRow","CustomersGrouping","CustomersCard","CustomersPage","history","path","match","params","ProductsLoadingDialog","products","PRODUCTS_URL","productsSlice","fetchProducts","productsFetched","fetchProduct","productId","product","productFetched","productForEdit","deleteProduct","productDeleted","createProduct","productForCreation","productCreated","updateProduct","productUpdated","updateProductsStatus","productsStatusUpdated","deleteProducts","productsDeleted","ProductStatusCssClasses","ProductStatusTitles","ProductConditionCssClasses","ProductConditionTitles","model","manufacture","VINCode","AVAILABLE_COLORS","AVAILABLE_MANUFACTURES","ProductsUIContext","useProductsUIContext","ProductsUIProvider","productsUIEvents","newProductButtonClick","openEditProductPage","openDeleteProductDialog","openDeleteProductsDialog","openFetchProductsDialog","openUpdateProductsStatusDialog","ProductDeleteDialog","productsUIContext","productsUIProps","variant","ProductsDeleteDialog","selectedProducts","_products","ProductsFetchDialog","width","ProductsUpdateStatusDialog","ProductsFilter","condition","ConditionColumnFormatter","ColorColumnFormatter","color","PriceColumnFormatter","price","OverlayTrigger","overlay","Tooltip","ProductsTable","ProductsGrouping","ProductsCard","ProductsPage","ProductEditSchema","modelYear","mileage","ProductEditForm","btnRef","saveProduct","index","as","display","ref","SPECIFICATIONS_DICTIONARY","SpecificationsUIContext","useSpecificationsUIContext","SpecificationsUIProvider","currentProductId","setProductId","selectedId","setSelectedId","initSpecification","specId","carId","showEditSpecificationDialog","setShowEditSpecificationDialog","showDeleteSpecificationDialog","setShowDeleteSpecificationDialog","showDeleteSpecificationsDialog","setShowDeleteSpecificationsDialog","showFetchSpecificationsDialog","setShowFetchSpecificationsDialog","openEditSpecificationDialog","openNewSpecificationDialog","closeEditSpecificationDialog","openDeleteSpecificationDialog","closeDeleteSpecificationDialog","openDeleteSpecificationsDialog","closeDeleteSpecificationsDialog","openFetchSpecificationsDialog","closeFetchSpecificationsDialog","SpecificationsFilter","specsUIContext","specsUIProps","SPECIFICATIONS_URL","initialSpecificationsState","specificationForEdit","lastError","createSlice","initialState","reducers","payload","specificationFetched","specificationsFetched","specificationCreated","specification","specificationUpdated","entity","specificationDeleted","specificationsDeleted","includes","fetchSpecifications","fetchSpecification","specificationId","deleteSpecification","createSpecification","specificationForCreation","updateSpecification","deleteSpecifications","SpecificationsTable","specifications","SpecificationsLoadingDialog","SpecificationsDeleteDialog","SpecificationDeleteDialog","selectedSpecifications","_specifications","SpecificationsFetchDialog","SpecificationsGrouping","SpecificationEditDialogHeader","SpecificationEditSchema","SpecificationEditForm","saveSpecification","spec","SpecificationEditDialog","Specifications","RemarksUIContext","useRemarksUIContext","RemarksUIProvider","showEditRemarkDialog","setShowEditRemarkDialog","initRemark","dueDate","showDeleteRemarkDialog","setShowDeleteRemarkDialog","showDeleteRemarksDialog","setShowDeleteRemarksDialog","showFetchRemarksDialog","setShowFetchRemarksDialog","openNewRemarkDialog","openEditRemarkDialog","closeEditRemarkDialog","openDeleteRemarkDialog","closeDeleteRemarkDialog","openDeleteRemarksDialog","closeDeleteRemarksDialog","openFetchRemarksDialog","closeFetchRemarksDialog","RemarksFilter","remarksUIContext","remarksUIProps","REMARKS_URL","initialRemarksState","remarkForEdit","remarkFetched","remarksFetched","remarkCreated","remark","remarkUpdated","remarkDeleted","remarksDeleted","remarksStatusUpdated","findIndex","fetchRemarks","fetchRemark","remarkId","deleteRemark","createRemark","remarkForCreation","updateRemark","deleteRemarks","console","log","RemarksTable","remarks","RemarksLoadingDialog","RemarksDeleteDialog","RemarkDeleteDialog","selectedRemarks","_remarks","RemarksFetchDialog","RemarksGrouping","RemarkEditDialogHeader","RemarkEditSchema","RemarkEditForm","saveRemark","RemarkEditDialog","date","year","getFullYear","month","getMonth","toString","day","getDate","getFormattedDate","Remarks","initProduct","description","ProductEdit","suhbeader","useSubheader","tab","setTab","useRef","backToProductsList","current","click","role","data-toggle","aria-selected","eCommercePage","fallback","exact","from","to"],"mappings":"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","file":"static/js/4.1c8d31e6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersLoadingDialog() {\r\n  // Customers Redux state\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.listLoading }),\r\n    shallowEqual\r\n  );\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const CUSTOMERS_URL = \"api/customers\";\r\n\r\n// CREATE =>  POST: add a new customer to the server\r\nexport function createCustomer(customer) {\r\n  return axios.post(CUSTOMERS_URL, { customer });\r\n}\r\n\r\n// READ\r\nexport function getAllCustomers() {\r\n  return axios.get(CUSTOMERS_URL);\r\n}\r\n\r\nexport function getCustomerById(customerId) {\r\n  return axios.get(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findCustomers(queryParams) {\r\n  return axios.post(`${CUSTOMERS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the customer on the server\r\nexport function updateCustomer(customer) {\r\n  return axios.put(`${CUSTOMERS_URL}/${customer.id}`, { customer });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForCustomers(ids, status) {\r\n  return axios.post(`${CUSTOMERS_URL}/updateStatusForCustomers`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the customer from the server\r\nexport function deleteCustomer(customerId) {\r\n  return axios.delete(`${CUSTOMERS_URL}/${customerId}`);\r\n}\r\n\r\n// DELETE Customers by ids\r\nexport function deleteCustomers(ids) {\r\n  return axios.post(`${CUSTOMERS_URL}/deleteCustomers`, { ids });\r\n}\r\n","import * as requestFromServer from \"./customersCrud\";\r\nimport {customersSlice, callTypes} from \"./customersSlice\";\r\n\r\nconst {actions} = customersSlice;\r\n\r\nexport const fetchCustomers = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findCustomers(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.customersFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchCustomer = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.customerFetched({ customerForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getCustomerById(id)\r\n    .then(response => {\r\n      const customer = response.data;\r\n      dispatch(actions.customerFetched({ customerForEdit: customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomer(id)\r\n    .then(response => {\r\n      dispatch(actions.customerDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createCustomer = customerForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createCustomer(customerForCreation)\r\n    .then(response => {\r\n      const { customer } = response.data;\r\n      dispatch(actions.customerCreated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomer = customer => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateCustomer(customer)\r\n    .then(() => {\r\n      dispatch(actions.customerUpdated({ customer }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customer\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateCustomersStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForCustomers(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.customersStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update customers status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteCustomers = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteCustomers(ids)\r\n    .then(() => {\r\n      dispatch(actions.customersDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete customers\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomerEditDialogHeader({ id }) {\r\n  // Customers Redux state\r\n  const { customerForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      customerForEdit: state.customers.customerForEdit,\r\n      actionsLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  // Title couting\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Customer\";\r\n    if (customerForEdit && id) {\r\n      _title = `Edit customer '${customerForEdit.firstName} ${customerForEdit.lastName}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [customerForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst CustomerEditSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Firstname is required\"),\r\n  lastName: Yup.string()\r\n    .min(3, \"Minimum 3 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Lastname is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Email is required\"),\r\n  userName: Yup.string().required(\"Username is required\"),\r\n  dateOfBbirth: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Date of Birth is required\"),\r\n  ipAddress: Yup.string().required(\"IP Address is required\"),\r\n});\r\n\r\nexport function CustomerEditForm({\r\n  saveCustomer,\r\n  customer,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={customer}\r\n        validationSchema={CustomerEditSchema}\r\n        onSubmit={(values) => {\r\n          saveCustomer(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  {/* First Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      component={Input}\r\n                      placeholder=\"First Name\"\r\n                      label=\"First Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Last Name */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      component={Input}\r\n                      placeholder=\"Last Name\"\r\n                      label=\"Last Name\"\r\n                    />\r\n                  </div>\r\n                  {/* Login */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"userName\"\r\n                      component={Input}\r\n                      placeholder=\"Login\"\r\n                      label=\"Login\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {/* Email */}\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      component={Input}\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                    />\r\n                  </div>\r\n                  {/* Date of birth */}\r\n                  <div className=\"col-lg-4\">\r\n                    <DatePickerField\r\n                      name=\"dateOfBbirth\"\r\n                      label=\"Date of Birth\"\r\n                    />\r\n                  </div>\r\n                  {/* IP Address */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"ipAddress\"\r\n                      component={Input}\r\n                      placeholder=\"IP Address\"\r\n                      label=\"IP Address\"\r\n                      customFeedbackLabel=\"We'll never share customer IP Address with anyone else\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  {/* Gender */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"Gender\" label=\"Gender\">\r\n                      <option value=\"Female\">Female</option>\r\n                      <option value=\"Male\">Male</option>\r\n                    </Select>\r\n                  </div>\r\n                  {/* Type */}\r\n                  <div className=\"col-lg-4\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Business</option>\r\n                      <option value=\"1\">Individual</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const CustomerStatusCssClasses = [\"danger\", \"success\", \"info\", \"\"];\r\nexport const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"\"];\r\nexport const CustomerTypeCssClasses = [\"success\", \"primary\", \"\"];\r\nexport const CustomerTypeTitles = [\"Business\", \"Individual\", \"\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    lastName: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    ipAddress: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\n","import React, {createContext, useContext, useState, useCallback} from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./CustomersUIHelpers\";\r\n\r\nconst CustomersUIContext = createContext();\r\n\r\nexport function useCustomersUIContext() {\r\n  return useContext(CustomersUIContext);\r\n}\r\n\r\nexport const CustomersUIConsumer = CustomersUIContext.Consumer;\r\n\r\nexport function CustomersUIProvider({customersUIEvents, children}) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const initCustomer = {\r\n    id: undefined,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    gender: \"Female\",\r\n    status: 0,\r\n    dateOfBbirth: \"\",\r\n    ipAddress: \"\",\r\n    type: 1\r\n  };\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    initCustomer,\r\n    newCustomerButtonClick: customersUIEvents.newCustomerButtonClick,\r\n    openEditCustomerDialog: customersUIEvents.openEditCustomerDialog,\r\n    openDeleteCustomerDialog: customersUIEvents.openDeleteCustomerDialog,\r\n    openDeleteCustomersDialog: customersUIEvents.openDeleteCustomersDialog,\r\n    openFetchCustomersDialog: customersUIEvents.openFetchCustomersDialog,\r\n    openUpdateCustomersStatusDialog: customersUIEvents.openUpdateCustomersStatusDialog\r\n  };\r\n\r\n  return <CustomersUIContext.Provider value={value}>{children}</CustomersUIContext.Provider>;\r\n}","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { CustomerEditDialogHeader } from \"./CustomerEditDialogHeader\";\r\nimport { CustomerEditForm } from \"./CustomerEditForm\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomerEditDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      initCustomer: customersUIContext.initCustomer,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, customerForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.customers.actionsLoading,\r\n      customerForEdit: state.customers.customerForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server call for getting Customer by id\r\n    dispatch(actions.fetchCustomer(id));\r\n  }, [id, dispatch]);\r\n\r\n  // server request for saving customer\r\n  const saveCustomer = (customer) => {\r\n    if (!id) {\r\n      // server request for creating customer\r\n      dispatch(actions.createCustomer(customer)).then(() => onHide());\r\n    } else {\r\n      // server request for updating customer\r\n      dispatch(actions.updateCustomer(customer)).then(() => onHide());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <CustomerEditDialogHeader id={id} />\r\n      <CustomerEditForm\r\n        saveCustomer={saveCustomer}\r\n        actionsLoading={actionsLoading}\r\n        customer={customerForEdit || customersUIProps.initCustomer}\r\n        onHide={onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {useCustomersUIContext} from \"../CustomersUIContext\";\r\n\r\nexport function CustomerDeleteDialog({ id, show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomer = () => {\r\n    // server request for deleting customer by id\r\n    dispatch(actions.deleteCustomer(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n      // clear selections list\r\n      customersUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customer Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this customer?</span>\r\n        )}\r\n        {isLoading && <span>Customer is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomer}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\nimport {ModalProgressBar} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function CustomersDeleteDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.customers.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteCustomers = () => {\r\n    // server request for deleting customer by selected ids\r\n    dispatch(actions.deleteCustomers(customersUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n        () => {\r\n          // clear selections list\r\n          customersUIProps.setIds([]);\r\n          // closing delete modal\r\n          onHide();\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {/*begin::Loading*/}\r\n      {isLoading && <ModalProgressBar />}\r\n      {/*end::Loading*/}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Customers Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected customers?</span>\r\n        )}\r\n        {isLoading && <span>Customer are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteCustomers}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersFetchDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if customers weren't selected we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../CustomersUIHelpers\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst selectedCustomers = (entities, ids) => {\r\n  const _customers = [];\r\n  ids.forEach((id) => {\r\n    const customer = entities.find((el) => el.id === id);\r\n    if (customer) {\r\n      _customers.push(customer);\r\n    }\r\n  });\r\n  return _customers;\r\n};\r\n\r\nexport function CustomersUpdateStateDialog({ show, onHide }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Customers Redux state\r\n  const { customers, isLoading } = useSelector(\r\n    (state) => ({\r\n      customers: selectedCustomers(\r\n        state.customers.entities,\r\n        customersUIProps.ids\r\n      ),\r\n      isLoading: state.customers.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!customersUIProps.ids || customersUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for update customers status by selected ids\r\n    dispatch(actions.updateCustomersStatus(customersUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchCustomers(customersUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            customersUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected customers\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {/*begin::Loading*/}\r\n        {isLoading && (\r\n          <div className=\"overlay-layer\">\r\n            <div className=\"spinner spinner-lg spinner-primary\" />\r\n          </div>\r\n        )}\r\n        {/*end::Loading*/}\r\n        <table className=\"table table table-head-custom table-vertical-center overflow-hidden\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>STATUS</th>\r\n              <th>CUSTOMER</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers.map((customer) => (\r\n              <tr key={`id${customer.id}`}>\r\n                <td>{customer.id}</td>\r\n                <td>\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      CustomerStatusCssClasses[customer.status]\r\n                    } label-inline`}\r\n                  >\r\n                    {\" \"}\r\n                    {CustomerStatusTitles[customer.status]}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"ml-3\">\r\n                    {customer.lastName}, {customer.firstName}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className=\"form-control\"\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Suspended</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Pending</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate mr-3\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, type, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by type\r\n  filter.type = type !== \"\" ? +type : undefined;\r\n  // Filter by all fields\r\n  filter.lastName = searchText;\r\n  if (searchText) {\r\n    filter.firstName = searchText;\r\n    filter.email = searchText;\r\n    filter.ipAddress = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function CustomersFilter({ listLoading }) {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // queryParams, setQueryParams,\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(customersUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, customersUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      // update list by queryParams\r\n      customersUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Susspended=0/Active=1/Pending=2\r\n          type: \"\", // values => All=\"\"/Business=0/Individual=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  // TODO: Change this code\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Susspended</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"2\">Pending</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"type\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.type}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Business</option>\r\n                  <option value=\"1\">Individual</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Type\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerStatusCssClasses,\r\n  CustomerStatusTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function StatusColumnFormatter(cellContent, row) {\r\n  const getLabelCssClasses = () => {\r\n    return `label label-lg label-light-${\r\n      CustomerStatusCssClasses[row.status]\r\n    } label-inline`;\r\n  };\r\n  return (\r\n    <span className={getLabelCssClasses()}>\r\n      {CustomerStatusTitles[row.status]}\r\n    </span>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\nimport React from \"react\";\r\nimport {\r\n  CustomerTypeCssClasses,\r\n  CustomerTypeTitles,\r\n} from \"../../CustomersUIHelpers\";\r\n\r\nexport function TypeColumnFormatter(cellContent, row) {\r\n  return (\r\n    <>\r\n      <span\r\n        className={`label label-dot label-${\r\n          CustomerTypeCssClasses[row.type]\r\n        } mr-2`}\r\n      ></span>\r\n      &nbsp;\r\n      <span className={`font-bold font-${CustomerTypeCssClasses[row.type]}`}>\r\n        {CustomerTypeTitles[row.type]}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","// please be familiar with react-bootstrap-table-next column formaters\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\r\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditCustomerDialog, openDeleteCustomerDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <a\r\n        title=\"Edit customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n      <> </>\r\n\r\n      <a\r\n        title=\"Delete customer\"\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteCustomerDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/customers/customersActions\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n  headerSortingClasses,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as uiHelpers from \"../CustomersUIHelpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersTable() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      queryParams: customersUIContext.queryParams,\r\n      setQueryParams: customersUIContext.setQueryParams,\r\n      openEditCustomerDialog: customersUIContext.openEditCustomerDialog,\r\n      openDeleteCustomerDialog: customersUIContext.openDeleteCustomerDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  // Getting curret state of customers list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.customers }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n\r\n  // Customers Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    customersUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchCustomers(customersUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customersUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"firstName\",\r\n      text: \"Firstname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"lastName\",\r\n      text: \"Lastname\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"gender\",\r\n      text: \"Gender\",\r\n      sort: false,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n      headerSortingClasses,\r\n    },\r\n    {\r\n      dataField: \"type\",\r\n      text: \"Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.TypeColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditCustomerDialog: customersUIProps.openEditCustomerDialog,\r\n        openDeleteCustomerDialog: customersUIProps.openDeleteCustomerDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: customersUIProps.queryParams.pageSize,\r\n    page: customersUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                bordered={false}\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  customersUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: customersUIProps.ids,\r\n                  setIds: customersUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useCustomersUIContext } from \"../CustomersUIContext\";\r\n\r\nexport function CustomersGrouping() {\r\n  // Customers UI Context\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      setIds: customersUIContext.setIds,\r\n      openDeleteCustomersDialog: customersUIContext.openDeleteCustomersDialog,\r\n      openFetchCustomersDialog: customersUIContext.openFetchCustomersDialog,\r\n      openUpdateCustomersStatusDialog:\r\n        customersUIContext.openUpdateCustomersStatusDialog,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger\">\r\n                <span>\r\n                  Selected records count: <b>{customersUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openDeleteCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openFetchCustomersDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={customersUIProps.openUpdateCustomersStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { CustomersFilter } from \"./customers-filter/CustomersFilter\";\r\nimport { CustomersTable } from \"./customers-table/CustomersTable\";\r\nimport { CustomersGrouping } from \"./customers-grouping/CustomersGrouping\";\r\nimport { useCustomersUIContext } from \"./CustomersUIContext\";\r\n\r\nexport function CustomersCard() {\r\n  const customersUIContext = useCustomersUIContext();\r\n  const customersUIProps = useMemo(() => {\r\n    return {\r\n      ids: customersUIContext.ids,\r\n      newCustomerButtonClick: customersUIContext.newCustomerButtonClick,\r\n    };\r\n  }, [customersUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Customers list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={customersUIProps.newCustomerButtonClick}\r\n          >\r\n            New Customer\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CustomersFilter />\r\n        {customersUIProps.ids.length > 0 && <CustomersGrouping />}\r\n        <CustomersTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CustomersLoadingDialog } from \"./customers-loading-dialog/CustomersLoadingDialog\";\r\nimport { CustomerEditDialog } from \"./customer-edit-dialog/CustomerEditDialog\";\r\nimport { CustomerDeleteDialog } from \"./customer-delete-dialog/CustomerDeleteDialog\";\r\nimport { CustomersDeleteDialog } from \"./customers-delete-dialog/CustomersDeleteDialog\";\r\nimport { CustomersFetchDialog } from \"./customers-fetch-dialog/CustomersFetchDialog\";\r\nimport { CustomersUpdateStateDialog } from \"./customers-update-status-dialog/CustomersUpdateStateDialog\";\r\nimport { CustomersUIProvider } from \"./CustomersUIContext\";\r\nimport { CustomersCard } from \"./CustomersCard\";\r\n\r\nexport function CustomersPage({ history }) {\r\n  const customersUIEvents = {\r\n    newCustomerButtonClick: () => {\r\n      history.push(\"/e-commerce/customers/new\");\r\n    },\r\n    openEditCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/edit`);\r\n    },\r\n    openDeleteCustomerDialog: (id) => {\r\n      history.push(`/e-commerce/customers/${id}/delete`);\r\n    },\r\n    openDeleteCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/deleteCustomers`);\r\n    },\r\n    openFetchCustomersDialog: () => {\r\n      history.push(`/e-commerce/customers/fetch`);\r\n    },\r\n    openUpdateCustomersStatusDialog: () => {\r\n      history.push(\"/e-commerce/customers/updateStatus\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CustomersUIProvider customersUIEvents={customersUIEvents}>\r\n      <CustomersLoadingDialog />\r\n      <Route path=\"/e-commerce/customers/new\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/edit\">\r\n        {({ history, match }) => (\r\n          <CustomerEditDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/deleteCustomers\">\r\n        {({ history, match }) => (\r\n          <CustomersDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/:id/delete\">\r\n        {({ history, match }) => (\r\n          <CustomerDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/fetch\">\r\n        {({ history, match }) => (\r\n          <CustomersFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/customers/updateStatus\">\r\n        {({ history, match }) => (\r\n          <CustomersUpdateStateDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/customers\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <CustomersCard />\r\n    </CustomersUIProvider>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function ProductsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.products.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const PRODUCTS_URL = \"api/products\";\r\n\r\n// CREATE =>  POST: add a new product to the server\r\nexport function createProduct(product) {\r\n  return axios.post(PRODUCTS_URL, { product });\r\n}\r\n\r\n// READ\r\nexport function getAllProducts() {\r\n  return axios.get(PRODUCTS_URL);\r\n}\r\n\r\nexport function getProductById(productId) {\r\n  return axios.get(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// Method from server should return QueryResultsModel(items: any[], totalsCount: number)\r\n// items => filtered/sorted result\r\nexport function findProducts(queryParams) {\r\n  return axios.post(`${PRODUCTS_URL}/find`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the procuct on the server\r\nexport function updateProduct(product) {\r\n  return axios.put(`${PRODUCTS_URL}/${product.id}`, { product });\r\n}\r\n\r\n// UPDATE Status\r\nexport function updateStatusForProducts(ids, status) {\r\n  return axios.post(`${PRODUCTS_URL}/updateStatusForProducts`, {\r\n    ids,\r\n    status\r\n  });\r\n}\r\n\r\n// DELETE => delete the product from the server\r\nexport function deleteProduct(productId) {\r\n  return axios.delete(`${PRODUCTS_URL}/${productId}`);\r\n}\r\n\r\n// DELETE Products by ids\r\nexport function deleteProducts(ids) {\r\n  return axios.post(`${PRODUCTS_URL}/deleteProducts`, { ids });\r\n}\r\n","import * as requestFromServer from \"./productsCrud\";\r\nimport {productsSlice, callTypes} from \"./productsSlice\";\r\n\r\nconst {actions} = productsSlice;\r\n\r\nexport const fetchProducts = queryParams => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  return requestFromServer\r\n    .findProducts(queryParams)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.productsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchProduct = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.productFetched({ productForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getProductById(id)\r\n    .then(response => {\r\n      const product = response.data;\r\n      dispatch(actions.productFetched({ productForEdit: product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProduct = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProduct(id)\r\n    .then(response => {\r\n      dispatch(actions.productDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createProduct = productForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createProduct(productForCreation)\r\n    .then(response => {\r\n      const { product } = response.data;\r\n      dispatch(actions.productCreated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProduct = product => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateProduct(product)\r\n    .then(() => {\r\n      dispatch(actions.productUpdated({ product }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update product\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateProductsStatus = (ids, status) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateStatusForProducts(ids, status)\r\n    .then(() => {\r\n      dispatch(actions.productsStatusUpdated({ ids, status }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update products status\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteProducts = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteProducts(ids)\r\n    .then(() => {\r\n      dispatch(actions.productsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete products\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","export const ProductStatusCssClasses = [\"success\", \"info\", \"\"];\r\nexport const ProductStatusTitles = [\"Selling\", \"Sold\"];\r\nexport const ProductConditionCssClasses = [\"success\", \"danger\", \"\"];\r\nexport const ProductConditionTitles = [\"New\", \"Used\"];\r\nexport const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n  { text: \"10\", value: 10 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    model: \"\",\r\n    manufacture: \"\",\r\n    VINCode: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"VINCode\",\r\n  pageNumber: 1,\r\n  pageSize: 10\r\n};\r\nexport const AVAILABLE_COLORS = [\r\n  \"Red\",\r\n  \"CadetBlue\",\r\n  \"Eagle\",\r\n  \"Gold\",\r\n  \"LightSlateGrey\",\r\n  \"RoyalBlue\",\r\n  \"Crimson\",\r\n  \"Blue\",\r\n  \"Sienna\",\r\n  \"Indigo\",\r\n  \"Green\",\r\n  \"Violet\",\r\n  \"GoldenRod\",\r\n  \"OrangeRed\",\r\n  \"Khaki\",\r\n  \"Teal\",\r\n  \"Purple\",\r\n  \"Orange\",\r\n  \"Pink\",\r\n  \"Black\",\r\n  \"DarkTurquoise\"\r\n];\r\n\r\nexport const AVAILABLE_MANUFACTURES = [\r\n  \"Pontiac\",\r\n  \"Kia\",\r\n  \"Lotus\",\r\n  \"Subaru\",\r\n  \"Jeep\",\r\n  \"Isuzu\",\r\n  \"Mitsubishi\",\r\n  \"Oldsmobile\",\r\n  \"Chevrolet\",\r\n  \"Chrysler\",\r\n  \"Audi\",\r\n  \"Suzuki\",\r\n  \"GMC\",\r\n  \"Cadillac\",\r\n  \"Infinity\",\r\n  \"Mercury\",\r\n  \"Dodge\",\r\n  \"Ram\",\r\n  \"Lexus\",\r\n  \"Lamborghini\",\r\n  \"Honda\",\r\n  \"Nissan\",\r\n  \"Ford\",\r\n  \"Hyundai\",\r\n  \"Saab\",\r\n  \"Toyota\"\r\n];\r\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./ProductsUIHelpers\";\r\n\r\nconst ProductsUIContext = createContext();\r\n\r\nexport function useProductsUIContext() {\r\n  return useContext(ProductsUIContext);\r\n}\r\n\r\nexport const ProductsUIConsumer = ProductsUIContext.Consumer;\r\n\r\nexport function ProductsUIProvider({ productsUIEvents, children }) {\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n\r\n  const value = {\r\n    queryParams,\r\n    setQueryParamsBase,\r\n    ids,\r\n    setIds,\r\n    setQueryParams,\r\n    newProductButtonClick: productsUIEvents.newProductButtonClick,\r\n    openEditProductPage: productsUIEvents.openEditProductPage,\r\n    openDeleteProductDialog: productsUIEvents.openDeleteProductDialog,\r\n    openDeleteProductsDialog: productsUIEvents.openDeleteProductsDialog,\r\n    openFetchProductsDialog: productsUIEvents.openFetchProductsDialog,\r\n    openUpdateProductsStatusDialog:\r\n      productsUIEvents.openUpdateProductsStatusDialog,\r\n  };\r\n\r\n  return (\r\n    <ProductsUIContext.Provider value={value}>\r\n      {children}\r\n    </ProductsUIContext.Provider>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductDeleteDialog({ id, show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!id) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteProduct = () => {\r\n    // server request for deleting product by id\r\n    dispatch(actions.deleteProduct(id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n      // clear selections list\r\n      productsUIProps.setIds([]);\r\n      // closing delete modal\r\n      onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Product Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this product?</span>\r\n        )}\r\n        {isLoading && <span>Product is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProduct}\r\n            className=\"btn btn-delete btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsDeleteDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.products.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const deleteProducts = () => {\r\n    // server request for deleting product by seleted ids\r\n    dispatch(actions.deleteProducts(productsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(() => {\r\n        // clear selections list\r\n        productsUIProps.setIds([]);\r\n        // closing delete modal\r\n        onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Products Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected products?</span>\r\n        )}\r\n        {isLoading && <span>Products are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteProducts}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsFetchDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected ids we should close modal\r\n  useEffect(() => {\r\n    if (!productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ProductStatusCssClasses } from \"../ProductsUIHelpers\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst selectedProducts = (entities, ids) => {\r\n  const _products = [];\r\n  ids.forEach((id) => {\r\n    const product = entities.find((el) => el.id === id);\r\n    if (product) {\r\n      _products.push(product);\r\n    }\r\n  });\r\n  return _products;\r\n};\r\n\r\nexport function ProductsUpdateStatusDialog({ show, onHide }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Products Redux state\r\n  const { products, isLoading } = useSelector(\r\n    (state) => ({\r\n      products: selectedProducts(state.products.entities, productsUIProps.ids),\r\n      isLoading: state.products.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if there weren't selected products we should close modal\r\n  useEffect(() => {\r\n    if (productsUIProps.ids || productsUIProps.ids.length === 0) {\r\n      onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.ids]);\r\n\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const updateStatus = () => {\r\n    // server request for updateing product by ids\r\n    dispatch(actions.updateProductsStatus(productsUIProps.ids, status)).then(\r\n      () => {\r\n        // refresh list after deletion\r\n        dispatch(actions.fetchProducts(productsUIProps.queryParams)).then(\r\n          () => {\r\n            // clear selections list\r\n            productsUIProps.setIds([]);\r\n            // closing delete modal\r\n            onHide();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Status has been updated for selected products\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n        {isLoading && (\r\n          <div className=\"overlay-layer bg-transparent\">\r\n            <div className=\"spinner spinner-lg spinner-warning\" />\r\n          </div>\r\n        )}\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {products.map((product) => (\r\n              <div className=\"list-timeline-item mb-3\" key={product.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className={`label label-lg label-light-${\r\n                      ProductStatusCssClasses[product.status]\r\n                    } label-inline`}\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {product.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {product.manufacture}, {product.model}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"form\">\r\n        <div className=\"form-group\">\r\n          <select\r\n            className={`form-control ${ProductStatusCssClasses[status]}`}\r\n            value={status}\r\n            onChange={(e) => setStatus(+e.target.value)}\r\n          >\r\n            <option value=\"0\">Selling</option>\r\n            <option value=\"1\">Sold</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={updateStatus}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Update Status\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? +condition : undefined;\r\n  // Filter by all fields\r\n  filter.model = searchText;\r\n  if (searchText) {\r\n    filter.manufacture = searchText;\r\n    filter.VINCode = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by Status\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Selling</option>\r\n                  <option value=\"1\">Sold</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">New</option>\r\n                  <option value=\"1\">Used</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ProductStatusCssClasses,\r\n  ProductStatusTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const StatusColumnFormatter = (cellContent, row) => (\r\n  <span\r\n    className={`label label-lg label-light-${\r\n      ProductStatusCssClasses[row.status]\r\n    } label-inline`}\r\n  >\r\n    {ProductStatusTitles[row.status]}\r\n  </span>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  ProductConditionCssClasses,\r\n  ProductConditionTitles\r\n} from \"../../ProductsUIHelpers\";\r\n\r\nexport const ConditionColumnFormatter = (cellContent, row) => (\r\n  <>\r\n    <span\r\n      className={`badge badge-${\r\n        ProductConditionCssClasses[row.condition]\r\n      } badge-dot`}\r\n    ></span>\r\n    &nbsp;\r\n    <span\r\n      className={`font-bold font-${\r\n        ProductConditionCssClasses[row.condition]\r\n      }`}\r\n    >\r\n      {ProductConditionTitles[row.condition]}\r\n    </span>\r\n  </>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ColorColumnFormatter = (cellContent, row) => (\r\n  <span style={{ color: row.color }}>{row.color}</span>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const PriceColumnFormatter = (cellContent, row) => <>${row.price}</>;\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditProductPage, openDeleteProductDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-edit-tooltip\">Edit product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditProductPage(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"products-delete-tooltip\">Delete product</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteProductDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsTable() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.products }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  // Products Redux state\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // clear selections list\r\n    productsUIProps.setIds([]);\r\n    // server call by queryParams\r\n    dispatch(actions.fetchProducts(productsUIProps.queryParams));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productsUIProps.queryParams, dispatch]);\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"VINCode\",\r\n      text: \"VIN Code (ID)\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"manufacture\",\r\n      text: \"Manufacture\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"model\",\r\n      text: \"Model\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"modelYear\",\r\n      text: \"Model Year\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"color\",\r\n      text: \"Color\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ColorColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"price\",\r\n      text: \"Price\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.PriceColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.StatusColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"condition\",\r\n      text: \"Condition\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n      formatter: columnFormatters.ConditionColumnFormatter,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bootstrap4\r\n                bordered={false}\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  productsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: productsUIProps.ids,\r\n                  setIds: productsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n\r\nexport function ProductsGrouping() {\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20 margin-bottom-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"-font-bold font-danger-\">\r\n                <span>\r\n                  Selected records count: <b>{productsUIProps.ids.length}</b>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openDeleteProductsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openFetchProductsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={productsUIProps.openUpdateProductsStatusDialog}\r\n              >\r\n                <i className=\"fa fa-sync-alt\"></i> Update Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useMemo} from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport { ProductsFilter } from \"./products-filter/ProductsFilter\";\r\nimport { ProductsTable } from \"./products-table/ProductsTable\";\r\nimport { ProductsGrouping } from \"./products-grouping/ProductsGrouping\";\r\nimport { useProductsUIContext } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsCard() {\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      newProductButtonClick: productsUIContext.newProductButtonClick,\r\n      openDeleteProductsDialog: productsUIContext.openDeleteProductsDialog,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openUpdateProductsStatusDialog:\r\n        productsUIContext.openUpdateProductsStatusDialog,\r\n      openFetchProductsDialog: productsUIContext.openFetchProductsDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Products list\">\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={productsUIProps.newProductButtonClick}\r\n          >\r\n            New Product\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ProductsFilter />\r\n        {productsUIProps.ids.length > 0 && (\r\n          <>\r\n            <ProductsGrouping />\r\n          </>\r\n        )}\r\n        <ProductsTable />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ProductsLoadingDialog } from \"./products-loading-dialog/ProductsLoadingDialog\";\r\nimport { ProductDeleteDialog } from \"./product-delete-dialog/ProductDeleteDialog\";\r\nimport { ProductsDeleteDialog } from \"./products-delete-dialog/ProductsDeleteDialog\";\r\nimport { ProductsFetchDialog } from \"./products-fetch-dialog/ProductsFetchDialog\";\r\nimport { ProductsUpdateStatusDialog } from \"./products-update-status-dialog/ProductsUpdateStatusDialog\";\r\nimport { ProductsCard } from \"./ProductsCard\";\r\nimport { ProductsUIProvider } from \"./ProductsUIContext\";\r\n\r\nexport function ProductsPage({ history }) {\r\n  const productsUIEvents = {\r\n    newProductButtonClick: () => {\r\n      history.push(\"/e-commerce/products/new\");\r\n    },\r\n    openEditProductPage: (id) => {\r\n      history.push(`/e-commerce/products/${id}/edit`);\r\n    },\r\n    openDeleteProductDialog: (id) => {\r\n      history.push(`/e-commerce/products/${id}/delete`);\r\n    },\r\n    openDeleteProductsDialog: () => {\r\n      history.push(`/e-commerce/products/deleteProducts`);\r\n    },\r\n    openFetchProductsDialog: () => {\r\n      history.push(`/e-commerce/products/fetch`);\r\n    },\r\n    openUpdateProductsStatusDialog: () => {\r\n      history.push(\"/e-commerce/products/updateStatus\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ProductsUIProvider productsUIEvents={productsUIEvents}>\r\n      <ProductsLoadingDialog />\r\n      <Route path=\"/e-commerce/products/deleteProducts\">\r\n        {({ history, match }) => (\r\n          <ProductsDeleteDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/:id/delete\">\r\n        {({ history, match }) => (\r\n          <ProductDeleteDialog\r\n            show={match != null}\r\n            id={match && match.params.id}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/fetch\">\r\n        {({ history, match }) => (\r\n          <ProductsFetchDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <Route path=\"/e-commerce/products/updateStatus\">\r\n        {({ history, match }) => (\r\n          <ProductsUpdateStatusDialog\r\n            show={match != null}\r\n            onHide={() => {\r\n              history.push(\"/e-commerce/products\");\r\n            }}\r\n          />\r\n        )}\r\n      </Route>\r\n      <ProductsCard />\r\n    </ProductsUIProvider>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  AVAILABLE_COLORS,\r\n  AVAILABLE_MANUFACTURES,\r\n  ProductStatusTitles,\r\n  ProductConditionTitles,\r\n} from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  model: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Model is required\"),\r\n  manufacture: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Manufacture is required\"),\r\n  modelYear: Yup.number()\r\n    .min(1950, \"1950 is minimum\")\r\n    .max(2020, \"2020 is maximum\")\r\n    .required(\"Model year is required\"),\r\n  mileage: Yup.number()\r\n    .min(0, \"0 is minimum\")\r\n    .max(1000000, \"1000000 is maximum\")\r\n    .required(\"Mileage is required\"),\r\n  color: Yup.string().required(\"Color is required\"),\r\n  price: Yup.number()\r\n    .min(1, \"$1 is minimum\")\r\n    .max(1000000, \"$1000000 is maximum\")\r\n    .required(\"Price is required\"),\r\n  VINCode: Yup.string().required(\"VINCode is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"model\"\r\n                    component={Input}\r\n                    placeholder=\"Model\"\r\n                    label=\"Model\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"manufacture\" label=\"Manufacture\">\r\n                    {AVAILABLE_MANUFACTURES.map((manufacture) => (\r\n                      <option key={manufacture} value={manufacture}>\r\n                        {manufacture}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"modelYear\"\r\n                    component={Input}\r\n                    placeholder=\"Model year\"\r\n                    label=\"Model year\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"mileage\"\r\n                    component={Input}\r\n                    placeholder=\"Mileage\"\r\n                    label=\"Mileage\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"color\" label=\"Color\">\r\n                    {AVAILABLE_COLORS.map((color) => (\r\n                      <option key={color} value={color}>\r\n                        {color}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    component={Input}\r\n                    placeholder=\"Price\"\r\n                    label=\"Price ($)\"\r\n                    customFeedbackLabel=\"Please enter Price\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"VINCode\"\r\n                    component={Input}\r\n                    placeholder=\"VIN code\"\r\n                    label=\"VIN code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"status\" label=\"Status\">\r\n                    {ProductStatusTitles.map((status, index) => (\r\n                      <option key={status} value={index}>\r\n                        {status}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"condition\" label=\"Condition\">\r\n                    {ProductConditionTitles.map((condition, index) => (\r\n                      <option key={condition} value={index}>\r\n                        {condition}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 },\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    value: \"\",\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"name\",\r\n  pageNumber: 1,\r\n  pageSize: 5,\r\n};\r\n\r\nexport const SPECIFICATIONS_DICTIONARY = [\r\n  { id: 0, name: \"Seats\" },\r\n  { id: 1, name: \"Fuel Type\" },\r\n  { id: 2, name: \"Stock\" },\r\n  { id: 3, name: \"Door count\" },\r\n  { id: 4, name: \"Engine\" },\r\n  { id: 5, name: \"Transmission\" },\r\n  { id: 6, name: \"Drivetrain\" },\r\n  { id: 7, name: \"Combined MPG\" },\r\n  { id: 8, name: \"Warranty\" },\r\n  { id: 9, name: \"Wheels\" },\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { isEqual, isFunction } from \"lodash\";\r\nimport { initialFilter } from \"./SpecificationsUIHelper\";\r\n\r\nconst SpecificationsUIContext = createContext();\r\n\r\nexport function useSpecificationsUIContext() {\r\n  return useContext(SpecificationsUIContext);\r\n}\r\n\r\nexport const SpecificationsUIConsumer = SpecificationsUIContext.Consumer;\r\n\r\nexport function SpecificationsUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback((nextQueryParams) => {\r\n    setQueryParamsBase((prevQueryParams) => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const initSpecification = {\r\n    id: undefined,\r\n    value: \"\",\r\n    specId: 0,\r\n    carId: productId,\r\n  };\r\n  useEffect(() => {\r\n    initSpecification.carId = currentProductId;\r\n    initSpecification.productId = currentProductId;\r\n    setProductId(currentProductId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const [\r\n    showEditSpecificationDialog,\r\n    setShowEditSpecificationDialog,\r\n  ] = useState(false);\r\n  const openNewSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const openEditSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowEditSpecificationDialog(true);\r\n  };\r\n  const closeEditSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationDialog,\r\n    setShowDeleteSpecificationDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationDialog = (id) => {\r\n    setSelectedId(id);\r\n    setShowDeleteSpecificationDialog(true);\r\n  };\r\n  const closeDeleteSpecificationDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteSpecificationDialog(false);\r\n  };\r\n  const [\r\n    showDeleteSpecificationsDialog,\r\n    setShowDeleteSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(true);\r\n  };\r\n  const closeDeleteSpecificationsDialog = () => {\r\n    setShowDeleteSpecificationsDialog(false);\r\n  };\r\n  const [\r\n    showFetchSpecificationsDialog,\r\n    setShowFetchSpecificationsDialog,\r\n  ] = useState(false);\r\n  const openFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(true);\r\n  };\r\n  const closeFetchSpecificationsDialog = () => {\r\n    setShowFetchSpecificationsDialog(false);\r\n  };\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initSpecification,\r\n    selectedId,\r\n    showEditSpecificationDialog,\r\n    openEditSpecificationDialog,\r\n    openNewSpecificationDialog,\r\n    closeEditSpecificationDialog,\r\n    showDeleteSpecificationDialog,\r\n    openDeleteSpecificationDialog,\r\n    closeDeleteSpecificationDialog,\r\n    showDeleteSpecificationsDialog,\r\n    openDeleteSpecificationsDialog,\r\n    closeDeleteSpecificationsDialog,\r\n    showFetchSpecificationsDialog,\r\n    openFetchSpecificationsDialog,\r\n    closeFetchSpecificationsDialog,\r\n  };\r\n\r\n  return (\r\n    <SpecificationsUIContext.Provider value={value}>\r\n      {children}\r\n    </SpecificationsUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.value = searchText;\r\n  if (searchText) {\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function SpecificationsFilter() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      openNewSpecificationDialog: specsUIContext.openNewSpecificationDialog,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(specsUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, specsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      specsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-7 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-3 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => specsUIProps.openNewSpecificationDialog()}\r\n            >\r\n              Create new specification\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const SPECIFICATIONS_URL = \"api/specifications\";\r\n\r\n// CREATE =>  POST: add a new specifications to the server\r\nexport function createSpecification(specification) {\r\n  return axios.post(SPECIFICATIONS_URL, { specification });\r\n}\r\n\r\n// READ\r\n// Server should return filtered specifications by productId\r\nexport function getAllProductSpecificationsByProductId(productId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getSpecificationById(specificationId) {\r\n  return axios.get(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// Server should return sorted/filtered specifications and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/specificationsfind/{productId}'. Should be 'api/specifications/find/{productId}'!!!\r\nexport function findSpecifications(queryParams, productId) {\r\n  return axios.post(`${SPECIFICATIONS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the specification\r\nexport function updateSpecification(specification) {\r\n  return axios.put(`${SPECIFICATIONS_URL}/${specification.id}`, {\r\n    specification\r\n  });\r\n}\r\n\r\n// DELETE => delete the specification\r\nexport function deleteSpecification(specificationId) {\r\n  return axios.delete(`${SPECIFICATIONS_URL}/${specificationId}`);\r\n}\r\n\r\n// DELETE specifications by ids\r\nexport function deleteSpecifications(ids) {\r\n  return axios.post(`${SPECIFICATIONS_URL}/deleteSpecifications`, { ids });\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialSpecificationsState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  specificationForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const specificationsSlice = createSlice({\r\n  name: \"specifications\",\r\n  initialState: initialSpecificationsState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getSpecificationById\r\n    specificationFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.specificationForEdit = action.payload.specificationForEdit;\r\n      state.error = null;\r\n    },\r\n    // findSpecifications\r\n    specificationsFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createSpecification\r\n    specificationCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.specification);\r\n    },\r\n    // updateSpecification\r\n    specificationUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.specification.id) {\r\n          return action.payload.specification;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteSpecification\r\n    specificationDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteSpecifications\r\n    specificationsDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./specificationsCrud\";\r\nimport {specificationsSlice, callTypes} from \"./specificationsSlice\";\r\n\r\nconst {actions} = specificationsSlice;\r\n\r\nexport const fetchSpecifications = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(\r\n      actions.specificationsFetched({ totalCount: 0, entities: null })\r\n    );\r\n  }\r\n\r\n  return requestFromServer\r\n    .findSpecifications(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.specificationsFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchSpecification = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(\r\n      actions.specificationFetched({ specificationForEdit: undefined })\r\n    );\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getSpecificationById(id)\r\n    .then(response => {\r\n      const specification = response.data;\r\n      dispatch(\r\n        actions.specificationFetched({ specificationForEdit: specification })\r\n      );\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecification = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecification(id)\r\n    .then(response => {\r\n      dispatch(actions.specificationDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createSpecification = specificationForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createSpecification(specificationForCreation)\r\n    .then(response => {\r\n      const { specification } = response.data;\r\n      dispatch(actions.specificationCreated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateSpecification = specification => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateSpecification(specification)\r\n    .then(() => {\r\n      dispatch(actions.specificationUpdated({ specification }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update specification\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteSpecifications = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteSpecifications(ids)\r\n    .then(() => {\r\n      dispatch(actions.specificationsDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete specifications\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport function ActionsColumnFormatter(\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditSpecificationDialog, openDeleteSpecificationDialog }\r\n) {\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        overlay={<Tooltip id=\"specs-edit-tooltip\">Edit specification</Tooltip>}\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n          onClick={() => openEditSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n            <SVG\r\n              src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n            />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n\r\n      <> </>\r\n      <OverlayTrigger\r\n        overlay={\r\n          <Tooltip id=\"spec-delete-tooltip\">Delete specification</Tooltip>\r\n        }\r\n      >\r\n        <a\r\n          className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n          onClick={() => openDeleteSpecificationDialog(row.id)}\r\n        >\r\n          <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n            <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n          </span>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n}\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./SpecificationsUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsTable() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      queryParams: specsUIContext.queryParams,\r\n      setQueryParams: specsUIContext.setQueryParams,\r\n      openEditSpecificationDialog: specsUIContext.openEditSpecificationDialog,\r\n      openDeleteSpecificationDialog:\r\n        specsUIContext.openDeleteSpecificationDialog,\r\n      ids: specsUIContext.ids,\r\n      setIds: specsUIContext.setIds,\r\n      productId: specsUIContext.productId,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.specifications }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    specsUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchSpecifications(specsUIProps.queryParams,specsUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.queryParams, dispatch, specsUIProps.productId]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Specification Type\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"value\",\r\n      text: \"Value\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditSpecificationDialog: specsUIProps.openEditSpecificationDialog,\r\n        openDeleteSpecificationDialog:\r\n          specsUIProps.openDeleteSpecificationDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: specsUIProps.queryParams.pageSize,\r\n    page: specsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  specsUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: specsUIProps.ids,\r\n                  setIds: specsUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { LoadingDialog } from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationsLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsDeleteDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      productId: specsUIContext.productId,\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showDeleteSpecificationsDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationsDialog,\r\n      setIds: specsUIContext.setIds,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  // if there weren't selected specs we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  const deleteSpecifications = () => {\r\n    // server request for selected deleting specs\r\n    dispatch(actions.deleteSpecifications(specsUIProps.ids)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        specsUIProps.setIds([]);\r\n        specsUIProps.onHide();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specifications Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>\r\n            Are you sure to permanently delete selected specifications?\r\n          </span>\r\n        )}\r\n        {isLoading && <span>Specifications are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecifications}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/specifications/specificationsActions\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationDeleteDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      productId: specsUIContext.productId,\r\n      show: specsUIContext.showDeleteSpecificationDialog,\r\n      onHide: specsUIContext.closeDeleteSpecificationDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n      setIds: specsUIContext.setIds,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.specifications.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!specsUIProps.id) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteSpecification = () => {\r\n    // server request for deleting spec by id\r\n    dispatch(actions.deleteSpecification(specsUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchSpecifications(\r\n          specsUIProps.queryParams,\r\n          specsUIProps.productId\r\n        )\r\n      );\r\n      specsUIProps.setIds([]);\r\n      specsUIProps.onHide();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Specification Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this specification?</span>\r\n        )}\r\n        {isLoading && <span>Specification is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteSpecification}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nconst selectedSpecifications = (entities, ids) => {\r\n  const _specifications = [];\r\n  ids.forEach((id) => {\r\n    const specification = entities.find((el) => el.id === id);\r\n    if (specification) {\r\n      _specifications.push(specification);\r\n    }\r\n  });\r\n  return _specifications;\r\n};\r\n\r\nexport function SpecificationsFetchDialog() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      show: specsUIContext.showFetchSpecificationsDialog,\r\n      onHide: specsUIContext.closeFetchSpecificationsDialog,\r\n      queryParams: specsUIContext.queryParams,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specs Redux state\r\n  const { specifications } = useSelector(\r\n    (state) => ({\r\n      specifications: selectedSpecifications(\r\n        state.specifications.entities,\r\n        specsUIProps.ids\r\n      ),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!specsUIProps.ids || specsUIProps.ids.length === 0) {\r\n      specsUIProps.onHide();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [specsUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {specifications.map((specification) => (\r\n              <div className=\"list-timeline-item mb-3\" key={specification.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {specification.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">\r\n                    {specification.name}: {specification.value}{\" \"}\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={specsUIProps.onHide}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function SpecificationsGrouping() {\r\n  // Specs UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      ids: specsUIContext.ids,\r\n      openDeleteSpecificationsDialog:\r\n        specsUIContext.openDeleteSpecificationsDialog,\r\n      openFetchSpecificationsDialog:\r\n        specsUIContext.openFetchSpecificationsDialog,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {specsUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openDeleteSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={specsUIProps.openFetchSpecificationsDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function SpecificationEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Specs Redux state\r\n  const { specificationForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n      actionsLoading: state.specifications.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Specification\";\r\n    if (specificationForEdit && id) {\r\n      _title = \"Edit Specification\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [specificationForEdit, actionsLoading]);\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Select,\r\n  Input,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\nimport { SPECIFICATIONS_DICTIONARY } from \"../SpecificationsUIHelper\";\r\n\r\n// Validation schema\r\nconst SpecificationEditSchema = Yup.object().shape({\r\n  value: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Value is required\"),\r\n  specId: Yup.number().required(\"Specification type is required\"),\r\n});\r\n\r\nexport function SpecificationEditForm({\r\n  saveSpecification,\r\n  specification,\r\n  actionsLoading,\r\n  onHide,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={specification}\r\n        validationSchema={SpecificationEditSchema}\r\n        onSubmit={(values) => {\r\n          saveSpecification(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"specId\" label=\"Specification Type\">\r\n                      {SPECIFICATIONS_DICTIONARY.map((spec) => (\r\n                        <option key={spec.id} value={spec.id}>\r\n                          {spec.name}\r\n                        </option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"value\"\r\n                      component={Input}\r\n                      placeholder=\"Value\"\r\n                      label=\"Value\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/specifications/specificationsActions\";\r\nimport { SpecificationEditDialogHeader } from \"./SpecificationEditDialogHeader\";\r\nimport { SpecificationEditForm } from \"./SpecificationEditForm\";\r\nimport { useSpecificationsUIContext } from \"../SpecificationsUIContext\";\r\n\r\nexport function SpecificationEditDialog() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return {\r\n      id: specsUIContext.selectedId,\r\n      show: specsUIContext.showEditSpecificationDialog,\r\n      onHide: specsUIContext.closeEditSpecificationDialog,\r\n      productId: specsUIContext.productId,\r\n      queryParams: specsUIContext.queryParams,\r\n      initSpecification: specsUIContext.initSpecification,\r\n    };\r\n  }, [specsUIContext]);\r\n\r\n  // Specifications Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, specificationForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.specifications.actionsLoading,\r\n      specificationForEdit: state.specifications.specificationForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting spec by seleted id\r\n    dispatch(actions.fetchSpecification(specsUIProps.id));\r\n  }, [specsUIProps.id, dispatch]);\r\n\r\n  const saveSpecification = (specification) => {\r\n    if (!specsUIProps.id) {\r\n      dispatch(actions.createSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    } else {\r\n      dispatch(actions.updateSpecification(specification)).then(() => {\r\n        dispatch(\r\n          actions.fetchSpecifications(\r\n            specsUIProps.queryParams,\r\n            specsUIProps.productId\r\n          )\r\n        ).then(() => specsUIProps.onHide());\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={specsUIProps.show}\r\n      onHide={specsUIProps.onHide}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <SpecificationEditDialogHeader id={specsUIProps.id} />\r\n      <SpecificationEditForm\r\n        saveSpecification={saveSpecification}\r\n        actionsLoading={actionsLoading}\r\n        specification={specificationForEdit || specsUIProps.initSpecification}\r\n        onHide={specsUIProps.onHide}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { SpecificationsFilter } from \"./SpecificationsFilter\";\r\nimport { SpecificationsTable } from \"./SpecificationsTable\";\r\nimport { SpecificationsLoadingDialog } from \"./SpecificationsLoadingDialog\";\r\nimport { SpecificationsDeleteDialog } from \"./SpecificationsDeleteDialog\";\r\nimport { SpecificationDeleteDialog } from \"./SpecificationDeleteDialog\";\r\nimport { SpecificationsFetchDialog } from \"./SpecificationsFetchDialog\";\r\nimport { SpecificationsGrouping } from \"./SpecificationsGrouping\";\r\nimport { SpecificationEditDialog } from \"./specification-edit-dialog/SpecificationEditDialog\";\r\nimport { useSpecificationsUIContext } from \"./SpecificationsUIContext\";\r\n\r\nexport function Specifications() {\r\n  // Specifications UI Context\r\n  const specsUIContext = useSpecificationsUIContext();\r\n  const specsUIProps = useMemo(() => {\r\n    return { ids: specsUIContext.ids };\r\n  }, [specsUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <SpecificationsLoadingDialog />\r\n      <SpecificationEditDialog />\r\n      <SpecificationDeleteDialog />\r\n      <SpecificationsDeleteDialog />\r\n      <SpecificationsFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <SpecificationsFilter />\r\n        {specsUIProps.ids.length > 0 && (\r\n          <>\r\n            <SpecificationsGrouping />\r\n            <br />\r\n          </>\r\n        )}\r\n      </div>\r\n      <SpecificationsTable />\r\n    </>\r\n  );\r\n}\r\n","export const defaultSorted = [{ dataField: \"id\", order: \"asc\" }];\r\nexport const sizePerPageList = [\r\n  { text: \"1\", value: 1 },\r\n  { text: \"3\", value: 3 },\r\n  { text: \"5\", value: 5 }\r\n];\r\nexport const initialFilter = {\r\n  filter: {\r\n    text: \"\"\r\n  },\r\n  sortOrder: \"asc\", // asc||desc\r\n  sortField: \"id\",\r\n  pageNumber: 1,\r\n  pageSize: 5\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext, createContext, useState, useCallback } from \"react\";\r\nimport {isEqual, isFunction} from \"lodash\";\r\nimport {initialFilter} from \"./RemarksUIHelper\";\r\n\r\nconst RemarksUIContext = createContext();\r\n\r\nexport function useRemarksUIContext() {\r\n  return useContext(RemarksUIContext);\r\n}\r\n\r\nexport const RemarksUIConsumer = RemarksUIContext.Consumer;\r\n\r\nexport function RemarksUIProvider({ currentProductId, children }) {\r\n  const [productId, setProductId] = useState(currentProductId);\r\n  const [queryParams, setQueryParamsBase] = useState(initialFilter);\r\n  const [ids, setIds] = useState([]);\r\n  const setQueryParams = useCallback(nextQueryParams => {\r\n    setQueryParamsBase(prevQueryParams => {\r\n      if (isFunction(nextQueryParams)) {\r\n        nextQueryParams = nextQueryParams(prevQueryParams);\r\n      }\r\n\r\n      if (isEqual(prevQueryParams, nextQueryParams)) {\r\n        return prevQueryParams;\r\n      }\r\n\r\n      return nextQueryParams;\r\n    });\r\n  }, []);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [showEditRemarkDialog, setShowEditRemarkDialog] = useState(false);\r\n  const initRemark = {\r\n    id: undefined,\r\n    text: \"\",\r\n    type: 0,\r\n    dueDate: \"01/07/2020\",\r\n    carId: productId\r\n  };\r\n  useEffect(()=> {\r\n    initRemark.productId = currentProductId;\r\n    initRemark.carId = currentProductId;\r\n    setProductId(currentProductId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentProductId]);\r\n  const openNewRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const openEditRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowEditRemarkDialog(true);\r\n  };\r\n  const closeEditRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowEditRemarkDialog(false);\r\n  };\r\n  const [showDeleteRemarkDialog, setShowDeleteRemarkDialog] = useState(false);\r\n  const openDeleteRemarkDialog = id => {\r\n    setSelectedId(id);\r\n    setShowDeleteRemarkDialog(true);\r\n  };\r\n  const closeDeleteRemarkDialog = () => {\r\n    setSelectedId(undefined);\r\n    setShowDeleteRemarkDialog(false);\r\n  };\r\n\r\n  const [showDeleteRemarksDialog, setShowDeleteRemarksDialog] = useState(false);\r\n  const openDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(true);\r\n  };\r\n  const closeDeleteRemarksDialog = () => {\r\n    setShowDeleteRemarksDialog(false);\r\n  };\r\n\r\n  const [showFetchRemarksDialog, setShowFetchRemarksDialog] = useState(false);\r\n  const openFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(true);\r\n  };\r\n  const closeFetchRemarksDialog = () => {\r\n    setShowFetchRemarksDialog(false);\r\n  };\r\n\r\n  const value = {\r\n    ids,\r\n    setIds,\r\n    productId,\r\n    setProductId,\r\n    queryParams,\r\n    setQueryParams,\r\n    initRemark,\r\n    selectedId,\r\n    showEditRemarkDialog,\r\n    openNewRemarkDialog,    \r\n    openEditRemarkDialog,\r\n    closeEditRemarkDialog,\r\n    showDeleteRemarkDialog,\r\n    openDeleteRemarkDialog,\r\n    closeDeleteRemarkDialog,\r\n    showDeleteRemarksDialog,\r\n    openDeleteRemarksDialog,\r\n    closeDeleteRemarksDialog,\r\n    openFetchRemarksDialog,\r\n    closeFetchRemarksDialog,\r\n    showFetchRemarksDialog\r\n  };\r\n  \r\n  return (\r\n    <RemarksUIContext.Provider value={value}>\r\n      {children}\r\n    </RemarksUIContext.Provider>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  filter.text = searchText;\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function RemarksFilter() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      openNewRemarkDialog: remarksUIContext.openNewRemarkDialog,\r\n      queryParams: remarksUIContext.queryParams,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const applyFilter = (values) => {\r\n    const newQueryParams = prepareFilter(remarksUIProps.queryParams, values);\r\n    if (!isEqual(newQueryParams, remarksUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      remarksUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-filtration\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col-md-2 margin-bottom-10-mobile\">\r\n            <Formik\r\n              initialValues={{\r\n                searchText: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                applyFilter(values);\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                handleSubmit,\r\n                handleBlur,\r\n                handleChange,\r\n                setFieldValue,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"searchText\"\r\n                      placeholder=\"Search\"\r\n                      onBlur={handleBlur}\r\n                      value={values.searchText}\r\n                      onChange={(e) => {\r\n                        setFieldValue(\"searchText\", e.target.value);\r\n                        handleSubmit();\r\n                      }}\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      <b>Search</b> in all fields\r\n                    </small>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <div className=\"col-md-8 margin-bottom-10-mobile\"></div>\r\n          <div className=\"col-md-2 text-right margin-bottom-10-mobile\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => remarksUIProps.openNewRemarkDialog()}\r\n            >\r\n              Create new remark\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const REMARKS_URL = \"api/remarks\";\r\n\r\n// CREATE =>  POST: add a new remark to the server\r\nexport function createRemark(remark) {\r\n  return axios.post(REMARKS_URL, { remark });\r\n}\r\n\r\n// READ\r\n// Server should return filtered remarks by productId\r\nexport function getAllProductRemarksByProductId(productId) {\r\n  return axios.get(`${REMARKS_URL}?productId=${productId}`);\r\n}\r\n\r\nexport function getRemarkById(remarkId) {\r\n  return axios.get(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// Server should return sorted/filtered remarks and merge with items from state\r\n// TODO: Change your URL to REAL API, right now URL is 'api/remarksfind/{productId}'. Should be 'api/remarks/find/{productId}'!!!\r\nexport function findRemarks(queryParams, productId) {\r\n  return axios.post(`${REMARKS_URL}find/${productId}`, { queryParams });\r\n}\r\n\r\n// UPDATE => PUT: update the remark\r\nexport function updateRemark(remark) {\r\n  return axios.put(`${REMARKS_URL}/${remark.id}`, { remark });\r\n}\r\n\r\n// DELETE => delete the remark\r\nexport function deleteRemark(remarkId) {\r\n  return axios.delete(`${REMARKS_URL}/${remarkId}`);\r\n}\r\n\r\n// DELETE Remarks by ids\r\nexport function deleteRemarks(ids) {\r\n  return axios.post(`${REMARKS_URL}/deleteRemarks`, { ids });\r\n}\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialRemarksState = {\r\n  listLoading: false,\r\n  actionsLoading: false,\r\n  totalCount: 0,\r\n  entities: null,\r\n  remarkForEdit: undefined,\r\n  lastError: null\r\n};\r\nexport const callTypes = {\r\n  list: \"list\",\r\n  action: \"action\"\r\n};\r\n\r\nexport const remarksSlice = createSlice({\r\n  name: \"remarks\",\r\n  initialState: initialRemarksState,\r\n  reducers: {\r\n    catchError: (state, action) => {\r\n      state.error = `${action.type}: ${action.payload.error}`;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = false;\r\n      } else {\r\n        state.actionsLoading = false;\r\n      }\r\n    },\r\n    startCall: (state, action) => {\r\n      state.error = null;\r\n      if (action.payload.callType === callTypes.list) {\r\n        state.listLoading = true;\r\n      } else {\r\n        state.actionsLoading = true;\r\n      }\r\n    },\r\n    // getRemarkById\r\n    remarkFetched: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.remarkForEdit = action.payload.remarkForEdit;\r\n      state.error = null;\r\n    },\r\n    // findRemarks\r\n    remarksFetched: (state, action) => {\r\n      const { totalCount, entities } = action.payload;\r\n      state.listLoading = false;\r\n      state.error = null;\r\n      state.entities = entities;\r\n      state.totalCount = totalCount;\r\n    },\r\n    // createRemark\r\n    remarkCreated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      state.entities.push(action.payload.remark);\r\n    },\r\n    // updateRemark\r\n    remarkUpdated: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.map(entity => {\r\n        if (entity.id === action.payload.remark.id) {\r\n          return action.payload.remark;\r\n        }\r\n        return entity;\r\n      });\r\n    },\r\n    // deleteRemark\r\n    remarkDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(el => el.id !== action.payload.id);\r\n    },\r\n    // deleteRemarks\r\n    remarksDeleted: (state, action) => {\r\n      state.error = null;\r\n      state.actionsLoading = false;\r\n      state.entities = state.entities.filter(\r\n        el => !action.payload.ids.includes(el.id)\r\n      );\r\n    },\r\n    // remarksUpdateState\r\n    remarksStatusUpdated: (state, action) => {\r\n      state.actionsLoading = false;\r\n      state.error = null;\r\n      const { ids, status } = action.payload;\r\n      state.entities = state.entities.map(entity => {\r\n        if (ids.findIndex(id => id === entity.id) > -1) {\r\n          entity.status = status;\r\n        }\r\n        return entity;\r\n      });\r\n    }\r\n  }\r\n});\r\n","import * as requestFromServer from \"./remarksCrud\";\r\nimport {remarksSlice, callTypes} from \"./remarksSlice\";\r\n\r\nconst {actions} = remarksSlice;\r\n\r\nexport const fetchRemarks = (queryParams, productId) => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.list }));\r\n  if (!productId) {\r\n    return dispatch(actions.remarksFetched({ totalCount: 0, entities: null }));\r\n  }\r\n\r\n  return requestFromServer\r\n    .findRemarks(queryParams, productId)\r\n    .then(response => {\r\n      const { totalCount, entities } = response.data;\r\n      dispatch(actions.remarksFetched({ totalCount, entities }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.list }));\r\n    });\r\n};\r\n\r\nexport const fetchRemark = id => dispatch => {\r\n  if (!id) {\r\n    return dispatch(actions.remarkFetched({ remarkForEdit: undefined }));\r\n  }\r\n\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .getRemarkById(id)\r\n    .then(response => {\r\n      const remark = response.data;\r\n      dispatch(actions.remarkFetched({ remarkForEdit: remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't find remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemark = id => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemark(id)\r\n    .then(response => {\r\n      dispatch(actions.remarkDeleted({ id }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const createRemark = remarkForCreation => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .createRemark(remarkForCreation)\r\n    .then(response => {\r\n      const { remark } = response.data;\r\n      dispatch(actions.remarkCreated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't create remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const updateRemark = remark => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .updateRemark(remark)\r\n    .then(() => {\r\n      dispatch(actions.remarkUpdated({ remark }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't update remark\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n\r\nexport const deleteRemarks = ids => dispatch => {\r\n  dispatch(actions.startCall({ callType: callTypes.action }));\r\n  return requestFromServer\r\n    .deleteRemarks(ids)\r\n    .then(() => {\r\n      console.log(\"delete return\");\r\n      dispatch(actions.remarksDeleted({ ids }));\r\n    })\r\n    .catch(error => {\r\n      error.clientMessage = \"Can't delete remarks\";\r\n      dispatch(actions.catchError({ error, callType: callTypes.action }));\r\n    });\r\n};\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../../_metronic/_helpers\";\r\n\r\nexport const ActionsColumnFormatter = (\r\n  cellContent,\r\n  row,\r\n  rowIndex,\r\n  { openEditRemarkDialog, openDeleteRemarkDialog }\r\n) => (\r\n  <>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-edit-tooltip\">Edit remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-3\"\r\n        onClick={() => openEditRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n          <SVG\r\n            src={toAbsoluteUrl(\"/media/svg/icons/Communication/Write.svg\")}\r\n          />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n\r\n    <> </>\r\n    <OverlayTrigger\r\n      overlay={<Tooltip id=\"customers-delete-tooltip\">Delete remark</Tooltip>}\r\n    >\r\n      <a\r\n        className=\"btn btn-icon btn-light btn-hover-danger btn-sm\"\r\n        onClick={() => openDeleteRemarkDialog(row.id)}\r\n      >\r\n        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n          <SVG src={toAbsoluteUrl(\"/media/svg/icons/General/Trash.svg\")} />\r\n        </span>\r\n      </a>\r\n    </OverlayTrigger>\r\n  </>\r\n);\r\n","// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { ActionsColumnFormatter } from \"./column-formatters/ActionsColumnFormatter\";\r\nimport * as uiHelpers from \"./RemarksUIHelper\";\r\nimport { Pagination } from \"../../../../../../_metronic/_partials/controls\";\r\nimport {\r\n  getSelectRow,\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../../_metronic/_helpers\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksTable() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      queryParams: remarksUIContext.queryParams,\r\n      setQueryParams: remarksUIContext.setQueryParams,\r\n      productId: remarksUIContext.productId,\r\n      openEditRemarkDialog: remarksUIContext.openEditRemarkDialog,\r\n      openDeleteRemarkDialog: remarksUIContext.openDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  const { currentState } = useSelector(\r\n    (state) => ({ currentState: state.remarks }),\r\n    shallowEqual\r\n  );\r\n  const { totalCount, entities, listLoading } = currentState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    remarksUIProps.setIds([]);\r\n    dispatch(\r\n      actions.fetchRemarks(remarksUIProps.queryParams, remarksUIProps.productId)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.queryParams, dispatch, remarksUIProps.productId]);\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"text\",\r\n      text: \"Text\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"dueDate\",\r\n      text: \"Due date\",\r\n      sort: false,\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditRemarkDialog: remarksUIProps.openEditRemarkDialog,\r\n        openDeleteRemarkDialog: remarksUIProps.openDeleteRemarkDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: remarksUIProps.queryParams.pageSize,\r\n    page: remarksUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n        {({ paginationProps, paginationTableProps }) => {\r\n          return (\r\n            <Pagination\r\n              isLoading={listLoading}\r\n              paginationProps={paginationProps}\r\n            >\r\n              <BootstrapTable\r\n                wrapperClasses=\"table-responsive\"\r\n                classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                bordered={false}\r\n                bootstrap4\r\n                remote\r\n                keyField=\"id\"\r\n                data={entities === null ? [] : entities}\r\n                columns={columns}\r\n                defaultSorted={uiHelpers.defaultSorted}\r\n                onTableChange={getHandlerTableChange(\r\n                  remarksUIProps.setQueryParams\r\n                )}\r\n                selectRow={getSelectRow({\r\n                  entities,\r\n                  ids: remarksUIProps.ids,\r\n                  setIds: remarksUIProps.setIds,\r\n                })}\r\n                {...paginationTableProps}\r\n              >\r\n                <PleaseWaitMessage entities={entities} />\r\n                <NoRecordsFoundMessage entities={entities} />\r\n              </BootstrapTable>\r\n            </Pagination>\r\n          );\r\n        }}\r\n      </PaginationProvider>\r\n    </>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {LoadingDialog} from \"../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarksLoadingDialog() {\r\n  const { isLoading } = useSelector(\r\n    state => ({ isLoading: state.remarks.listLoading }),\r\n    shallowEqual\r\n  );\r\n  useEffect(() => {}, [isLoading]);\r\n  return <LoadingDialog isLoading={isLoading} text=\"Loading ...\" />;\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarksDialog: remarksUIContext.showDeleteRemarksDialog,\r\n      closeDeleteRemarksDialog: remarksUIContext.closeDeleteRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeDeleteRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  const deleteRemarks = () => {\r\n    dispatch(actions.deleteRemarks(remarksUIProps.ids)).then(() => {\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      ).then(() => {\r\n        remarksUIProps.setIds([]);\r\n        remarksUIProps.closeDeleteRemarksDialog();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarksDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remarks Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete selected remarks?</span>\r\n        )}\r\n        {isLoading && <span>Remarks are deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemarks}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport * as actions from \"../../../_redux/remarks/remarksActions\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarkDeleteDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showDeleteRemarkDialog: remarksUIContext.showDeleteRemarkDialog,\r\n      closeDeleteRemarkDialog: remarksUIContext.closeDeleteRemarkDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(\r\n    (state) => ({ isLoading: state.remarks.actionsLoading }),\r\n    shallowEqual\r\n  );\r\n\r\n  // if !id we should close modal\r\n  useEffect(() => {\r\n    if (!remarksUIProps.id) {\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.id]);\r\n\r\n  // looking for loading/dispatch\r\n  useEffect(() => {}, [isLoading, dispatch]);\r\n\r\n  const deleteRemark = () => {\r\n    // server request for deleting remark by id\r\n    dispatch(actions.deleteRemark(remarksUIProps.id)).then(() => {\r\n      // refresh list after deletion\r\n      dispatch(\r\n        actions.fetchRemarks(\r\n          remarksUIProps.queryParams,\r\n          remarksUIProps.productId\r\n        )\r\n      );\r\n      // clear selections list\r\n      remarksUIProps.setIds([]);\r\n      // closing delete modal\r\n      remarksUIProps.closeDeleteRemarkDialog();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showDeleteRemarkDialog}\r\n      onHide={remarksUIProps.closeDeleteRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      {isLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Remark Delete\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {!isLoading && (\r\n          <span>Are you sure to permanently delete this remark?</span>\r\n        )}\r\n        {isLoading && <span>Remark is deleting...</span>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeDeleteRemarkDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={deleteRemark}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nconst selectedRemarks = (entities, ids) => {\r\n  const _remarks = [];\r\n  ids.forEach((id) => {\r\n    const remark = entities.find((el) => el.id === id);\r\n    if (remark) {\r\n      _remarks.push(remark);\r\n    }\r\n  });\r\n  return _remarks;\r\n};\r\n\r\nexport function RemarksFetchDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showFetchRemarksDialog: remarksUIContext.showFetchRemarksDialog,\r\n      closeFetchRemarksDialog: remarksUIContext.closeFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  const { remarks } = useSelector(\r\n    (state) => ({\r\n      remarks: selectedRemarks(state.remarks.entities, remarksUIProps.ids),\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!remarksUIProps.ids || remarksUIProps.ids.length === 0) {\r\n      remarksUIProps.closeFetchRemarksDialog();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [remarksUIProps.ids]);\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showFetchRemarksDialog}\r\n      onHide={remarksUIProps.closeFetchRemarksDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n          Fetch selected elements\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"list-timeline list-timeline-skin-light padding-30\">\r\n          <div className=\"list-timeline-items\">\r\n            {remarks.map((remark) => (\r\n              <div className=\"list-timeline-item mb-3\" key={remark.id}>\r\n                <span className=\"list-timeline-text\">\r\n                  <span\r\n                    className=\"label label-lg label-light-success label-inline\"\r\n                    style={{ width: \"60px\" }}\r\n                  >\r\n                    ID: {remark.id}\r\n                  </span>{\" \"}\r\n                  <span className=\"ml-5\">{remark.text} </span>\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-light btn-elevate\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <> </>\r\n          <button\r\n            type=\"button\"\r\n            onClick={remarksUIProps.closeFetchRemarksDialog}\r\n            className=\"btn btn-primary btn-elevate\"\r\n          >\r\n            Ok\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function RemarksGrouping() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      ids: remarksUIContext.ids,\r\n      openDeleteRemarksDialog: remarksUIContext.openDeleteRemarksDialog,\r\n      openFetchRemarksDialog: remarksUIContext.openFetchRemarksDialog,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"row align-items-center form-group-actions margin-top-20\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"form-group form-group-inline\">\r\n            <div className=\"form-label form-label-no-wrap\">\r\n              <label className=\"font-bold font-danger mt-5\">\r\n                <span>Selected records count: {remarksUIProps.ids.length}</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group-inline\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openDeleteRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-trash\"></i> Delete All\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light-primary font-weight-bolder font-size-sm\"\r\n                onClick={remarksUIProps.openFetchRemarksDialog}\r\n              >\r\n                <i className=\"fa fa-stream\"></i> Fetch Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { ModalProgressBar } from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\nexport function RemarkEditDialogHeader({ id }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  // Remarks Redux state\r\n  const { remarkForEdit, actionsLoading } = useSelector(\r\n    (state) => ({\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n      actionsLoading: state.remarks.actionsLoading,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Remark\";\r\n    if (remarkForEdit && id) {\r\n      _title = \"Edit remark\";\r\n    }\r\n\r\n    setTitle(_title);\r\n    // eslint-disable-next-line\r\n  }, [remarkForEdit, actionsLoading]);\r\n\r\n  return (\r\n    <>\r\n      {actionsLoading && <ModalProgressBar variant=\"query\" />}\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"example-modal-sizes-title-lg\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n    </>\r\n  );\r\n}\r\n","// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  DatePickerField,\r\n} from \"../../../../../../../_metronic/_partials/controls\";\r\n\r\n// Validation schema\r\nconst RemarkEditSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Text is required\"),\r\n  type: Yup.number().required(\"Type is required\"),\r\n  dueDate: Yup.mixed()\r\n    .nullable(false)\r\n    .required(\"Due date is required\"),\r\n});\r\n\r\nexport function RemarkEditForm({ saveRemark, remark, actionsLoading, onHide }) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={remark}\r\n        validationSchema={RemarkEditSchema}\r\n        onSubmit={(values) => saveRemark(values)}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Modal.Body className=\"overlay overlay-block cursor-default\">\r\n              {actionsLoading && (\r\n                <div className=\"overlay-layer bg-transparent\">\r\n                  <div className=\"spinner spinner-lg spinner-success\" />\r\n                </div>\r\n              )}\r\n              <Form className=\"form form-label-right\">\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Field\r\n                      name=\"text\"\r\n                      component={Input}\r\n                      placeholder=\"Text\"\r\n                      label=\"Text\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <DatePickerField name=\"dueDate\" label=\"Due date\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <Select name=\"type\" label=\"Type\">\r\n                      <option value=\"0\">Info</option>\r\n                      <option value=\"1\">Note</option>\r\n                      <option value=\"2\">Reminder</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                onClick={onHide}\r\n                className=\"btn btn-light btn-elevate\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <> </>\r\n              <button\r\n                type=\"submit\"\r\n                onClick={() => handleSubmit()}\r\n                className=\"btn btn-primary btn-elevate\"\r\n              >\r\n                Save\r\n              </button>\r\n            </Modal.Footer>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../_redux/remarks/remarksActions\";\r\nimport { RemarkEditDialogHeader } from \"./RemarkEditDialogHeader\";\r\nimport { RemarkEditForm } from \"./RemarkEditForm\";\r\nimport { useRemarksUIContext } from \"../RemarksUIContext\";\r\n\r\nfunction getFormattedDate(date) {\r\n  if (typeof date === \"string\") {\r\n    return date;\r\n  }\r\n\r\n  var year = date.getFullYear();\r\n\r\n  var month = (1 + date.getMonth()).toString();\r\n  month = month.length > 1 ? month : \"0\" + month;\r\n\r\n  var day = date.getDate().toString();\r\n  day = day.length > 1 ? day : \"0\" + day;\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nexport function RemarkEditDialog() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return {\r\n      id: remarksUIContext.selectedId,\r\n      setIds: remarksUIContext.setIds,\r\n      productId: remarksUIContext.productId,\r\n      queryParams: remarksUIContext.queryParams,\r\n      showEditRemarkDialog: remarksUIContext.showEditRemarkDialog,\r\n      closeEditRemarkDialog: remarksUIContext.closeEditRemarkDialog,\r\n      initRemark: remarksUIContext.initRemark,\r\n    };\r\n  }, [remarksUIContext]);\r\n\r\n  // Remarks Redux state\r\n  const dispatch = useDispatch();\r\n  const { actionsLoading, remarkForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.remarks.actionsLoading,\r\n      remarkForEdit: state.remarks.remarkForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    // server request for getting remark by seleted id\r\n    dispatch(actions.fetchRemark(remarksUIProps.id));\r\n  }, [remarksUIProps.id, dispatch]);\r\n\r\n  const saveRemark = (remark) => {\r\n    remark.dueDate = getFormattedDate(remark.dueDate);\r\n    if (!remarksUIProps.id) {\r\n      // server request for creating remarks\r\n      dispatch(actions.createRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    } else {\r\n      // server request for updating remarks\r\n      dispatch(actions.updateRemark(remark)).then(() => {\r\n        // refresh list after deletion\r\n        dispatch(\r\n          // refresh list after deletion\r\n          actions.fetchRemarks(\r\n            remarksUIProps.queryParams,\r\n            remarksUIProps.productId\r\n          )\r\n        ).then(() => {\r\n          // clear selections list\r\n          remarksUIProps.setIds([]);\r\n          // closing edit modal\r\n          remarksUIProps.closeEditRemarkDialog();\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={remarksUIProps.showEditRemarkDialog}\r\n      onHide={remarksUIProps.closeEditRemarkDialog}\r\n      aria-labelledby=\"example-modal-sizes-title-lg\"\r\n    >\r\n      <RemarkEditDialogHeader id={remarksUIProps.id} />\r\n      <RemarkEditForm\r\n        saveRemark={saveRemark}\r\n        actionsLoading={actionsLoading}\r\n        remark={remarkForEdit || remarksUIProps.initRemark}\r\n        onHide={remarksUIProps.closeEditRemarkDialog}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { RemarksFilter } from \"./RemarksFilter\";\r\nimport { RemarksTable } from \"./RemarksTable\";\r\nimport { RemarksLoadingDialog } from \"./RemarksLoadingDialog\";\r\nimport { RemarksDeleteDialog } from \"./RemarksDeleteDialog\";\r\nimport { RemarkDeleteDialog } from \"./RemarkDeleteDialog\";\r\nimport { RemarksFetchDialog } from \"./RemarksFetchDialog\";\r\nimport { RemarksGrouping } from \"./RemarksGrouping\";\r\nimport { RemarkEditDialog } from \"./remark-edit-dialog/RemarkEditDialog\";\r\nimport { useRemarksUIContext } from \"./RemarksUIContext\";\r\n\r\nexport function Remarks() {\r\n  // Remarks UI Context\r\n  const remarksUIContext = useRemarksUIContext();\r\n  const remarksUIProps = useMemo(() => {\r\n    return { ids: remarksUIContext.ids };\r\n  }, [remarksUIContext]);\r\n\r\n  return (\r\n    <>\r\n      <RemarksLoadingDialog />\r\n      <RemarkEditDialog />\r\n      <RemarkDeleteDialog />\r\n      <RemarksDeleteDialog />\r\n      <RemarksFetchDialog />\r\n      <div className=\"form margin-b-30\">\r\n        <RemarksFilter />\r\n        {remarksUIProps.ids.length > 0 && <RemarksGrouping />}\r\n      </div>\r\n      <RemarksTable />\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid,jsx-a11y/role-supports-aria-props */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../_redux/products/productsActions\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../../../_metronic/_partials/controls\";\r\nimport { ProductEditForm } from \"./ProductEditForm\";\r\nimport { Specifications } from \"../product-specifications/Specifications\";\r\nimport { SpecificationsUIProvider } from \"../product-specifications/SpecificationsUIContext\";\r\nimport { useSubheader } from \"../../../../../../_metronic/layout\";\r\nimport { ModalProgressBar } from \"../../../../../../_metronic/_partials/controls\";\r\nimport { RemarksUIProvider } from \"../product-remarks/RemarksUIContext\";\r\nimport { Remarks } from \"../product-remarks/Remarks\";\r\n\r\nconst initProduct = {\r\n  id: undefined,\r\n  model: \"\",\r\n  manufacture: \"Pontiac\",\r\n  modelYear: 2020,\r\n  mileage: 0,\r\n  description: \"\",\r\n  color: \"Red\",\r\n  price: 10000,\r\n  condition: 1,\r\n  status: 0,\r\n  VINCode: \"\",\r\n};\r\n\r\nexport function ProductEdit({\r\n  history,\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  // Subheader\r\n  const suhbeader = useSubheader();\r\n\r\n  // Tabs\r\n  const [tab, setTab] = useState(\"basic\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const layoutDispatch = useContext(LayoutContext.Dispatch);\r\n  const { actionsLoading, productForEdit } = useSelector(\r\n    (state) => ({\r\n      actionsLoading: state.products.actionsLoading,\r\n      productForEdit: state.products.productForEdit,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.fetchProduct(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let _title = id ? \"\" : \"New Product\";\r\n    if (productForEdit && id) {\r\n      _title = `Edit product '${productForEdit.manufacture} ${productForEdit.model} - ${productForEdit.modelYear}'`;\r\n    }\r\n\r\n    setTitle(_title);\r\n    suhbeader.setTitle(_title);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [productForEdit, id]);\r\n\r\n  const saveProduct = (values) => {\r\n    if (!id) {\r\n      dispatch(actions.createProduct(values)).then(() => backToProductsList());\r\n    } else {\r\n      dispatch(actions.updateProduct(values)).then(() => backToProductsList());\r\n    }\r\n  };\r\n\r\n  const btnRef = useRef();  \r\n  const saveProductClick = () => {\r\n    if (btnRef && btnRef.current) {\r\n      btnRef.current.click();\r\n    }\r\n  };\r\n\r\n  const backToProductsList = () => {\r\n    history.push(`/e-commerce/products`);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      {actionsLoading && <ModalProgressBar />}\r\n      <CardHeader title={title}>\r\n        <CardHeaderToolbar>\r\n          <button\r\n            type=\"button\"\r\n            onClick={backToProductsList}\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n            Back\r\n          </button>\r\n          {`  `}\r\n          <button className=\"btn btn-light ml-2\">\r\n            <i className=\"fa fa-redo\"></i>\r\n            Reset\r\n          </button>\r\n          {`  `}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary ml-2\"\r\n            onClick={saveProductClick}\r\n          >\r\n            Save\r\n          </button>\r\n        </CardHeaderToolbar>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ul className=\"nav nav-tabs nav-tabs-line \" role=\"tablist\">\r\n          <li className=\"nav-item\" onClick={() => setTab(\"basic\")}>\r\n            <a\r\n              className={`nav-link ${tab === \"basic\" && \"active\"}`}\r\n              data-toggle=\"tab\"\r\n              role=\"tab\"\r\n              aria-selected={(tab === \"basic\").toString()}\r\n            >\r\n              Basic info\r\n            </a>\r\n          </li>\r\n          {id && (\r\n            <>\r\n              {\" \"}\r\n              <li className=\"nav-item\" onClick={() => setTab(\"remarks\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"remarks\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"button\"\r\n                  aria-selected={(tab === \"remarks\").toString()}\r\n                >\r\n                  Product remarks\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\" onClick={() => setTab(\"specs\")}>\r\n                <a\r\n                  className={`nav-link ${tab === \"specs\" && \"active\"}`}\r\n                  data-toggle=\"tab\"\r\n                  role=\"tab\"\r\n                  aria-selected={(tab === \"specs\").toString()}\r\n                >\r\n                  Product specifications\r\n                </a>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className=\"mt-5\">\r\n          {tab === \"basic\" && (\r\n            <ProductEditForm\r\n              actionsLoading={actionsLoading}\r\n              product={productForEdit || initProduct}\r\n              btnRef={btnRef}\r\n              saveProduct={saveProduct}\r\n            />\r\n          )}\r\n          {tab === \"remarks\" && id && (\r\n            <RemarksUIProvider currentProductId={id}>\r\n              <Remarks />\r\n            </RemarksUIProvider>\r\n          )}\r\n          {tab === \"specs\" && id && (\r\n            <SpecificationsUIProvider currentProductId={id}>\r\n              <Specifications />\r\n            </SpecificationsUIProvider>\r\n          )}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport { CustomersPage } from \"./customers/CustomersPage\";\r\nimport { ProductsPage } from \"./products/ProductsPage\";\r\nimport { ProductEdit } from \"./products/product-edit/ProductEdit\";\r\nimport { LayoutSplashScreen, ContentRoute } from \"../../../../_metronic/layout\";\r\n\r\nexport default function eCommercePage() {\r\n  return (\r\n    <Suspense fallback={<LayoutSplashScreen />}>\r\n      <Switch>\r\n        {\r\n          /* Redirect from eCommerce root URL to /customers */\r\n          <Redirect\r\n            exact={true}\r\n            from=\"/e-commerce\"\r\n            to=\"/e-commerce/customers\"\r\n          />\r\n        }\r\n        <ContentRoute path=\"/e-commerce/customers\" component={CustomersPage} />\r\n        <ContentRoute path=\"/e-commerce/products/new\" component={ProductEdit} />\r\n        <ContentRoute\r\n          path=\"/e-commerce/products/:id/edit\"\r\n          component={ProductEdit}\r\n        />\r\n\r\n        <ContentRoute path=\"/e-commerce/products\" component={ProductsPage} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}